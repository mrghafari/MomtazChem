  // Simple vehicle assignment function - WORKING VERSION
  const handleVehicleAssignment = async (order: any) => {
    try {
      console.log('ðŸšš [VEHICLE ASSIGNMENT] Starting for order:', order.orderNumber);
      
      // Set the selected order for vehicle assignment
      setSelectedOrderForVehicle(order);
      
      // Use mock data for testing
      const mockVehicles = [
        {
          id: 1,
          vehicleTemplateName: 'Ú©Ø§Ù…ÛŒÙˆÙ† Ø³Ø¨Ú©',
          licensePlate: 'Ø¨ØºØ¯Ø§Ø¯-123457',
          driverName: 'Ø§Ø­Ù…Ø¯ Ù…Ø­Ù…Ø¯ÛŒ',
          isAvailable: true,
          loadCapacity: 2000,
          vehicleType: 'Ú©Ø§Ù…ÛŒÙˆÙ† Ø³Ø¨Ú©'
        },
        {
          id: 2,
          vehicleTemplateName: 'ÙˆØ§Ù†Øª',
          licensePlate: 'Ø§Ø±Ø¨ÛŒÙ„-789012',
          driverName: 'Ú©Ø±ÛŒÙ… Ø§Ø­Ù…Ø¯',
          isAvailable: true,
          loadCapacity: 1000,
          vehicleType: 'ÙˆØ§Ù†Øª'
        },
        {
          id: 3,
          vehicleTemplateName: 'Ú©Ø§Ù…ÛŒÙˆÙ† Ø³Ù†Ú¯ÛŒÙ†',
          licensePlate: 'Ú©Ø±Ú©ÙˆÚ©-456789',
          driverName: 'ØµÙ„Ø§Ø­ Ø§Ø­Ù…Ø¯',
          isAvailable: true,
          loadCapacity: 5000,
          vehicleType: 'Ú©Ø§Ù…ÛŒÙˆÙ† Ø³Ù†Ú¯ÛŒÙ†'
        }
      ];
      
      console.log('ðŸ”§ [MOCK DATA] Using mock vehicles:', mockVehicles.length);
      
      // Filter by weight capacity
      const orderWeight = order.calculatedWeight || order.totalWeight || 0;
      const availableVehicles = mockVehicles.filter(vehicle => 
        vehicle.isAvailable && vehicle.loadCapacity >= orderWeight
      );
      
      setAvailableFleetVehicles(availableVehicles);
      console.log('âœ… [VEHICLES] Available vehicles:', availableVehicles.length);
      
      // Open the assignment dialog
      setIsVehicleAssignmentOpen(true);
      
    } catch (error) {
      console.error('Vehicle assignment error:', error);
      toast({
        title: "Ø®Ø·Ø§",
        description: "Ø®Ø·Ø§ Ø¯Ø± Ø¨Ø§Ø±Ú¯Ø°Ø§Ø±ÛŒ Ø§Ø·Ù„Ø§Ø¹Ø§Øª Ø®ÙˆØ¯Ø±ÙˆÙ‡Ø§",
        variant: "destructive"
      });
    }
  };